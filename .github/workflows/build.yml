name: opencv-rust
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
      
defaults:
  run:
    shell: bash

jobs:
  opencv:
    strategy:
      fail-fast: false

      matrix:
        config:
          - os: ubuntu-20.04
            triplet: x64-linux
          - os: macos-11
            triplet: x64-osx
          - os: windows-2022
            triplet: x64-windows-static-md
    
    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install System Dependencies
        run: sudo apt-get update && sudo apt-get install -y libdbus-1-3 libdbus-1-dev libxi-dev libxtst-dev libgles2-mesa-dev libgtk-3-dev
        if: runner.os == 'Linux'
        
      - name: Install llvm
        run: choco install -y llvm --version 15.0.1
        if: runner.os == 'Windows'
        
      - name: llvm path
        run: echo "/C/Program Files/LLVM/bin" >> $GITHUB_PATH
        if: runner.os == 'Windows'
        
      - name: libclang path
        run: echo 'LIBCLANG_PATH="/C/Program Files/LLVM/lib"' >> $GITHUB_ENV
        if: runner.os == 'Windows'

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgGitCommitId: 49931943abe2a22dd9d91be2c4928ead56349b14
          runVcpkgInstall: true
        env:
          VCPKG_DEFAULT_TRIPLET: ${{ matrix.config.triplet }}
          
      - name: Print Paths
        run: |
          echo $PATH
          echo $VCPKG_ROOT

      - name: Run Rust App
        run: cargo run
        
      - name: Print Linkage (ldd)
        if: runner.os == 'Linux'
        run: ldd target/debug/test-opencv
        
      - name: Print Linkage (otool -L)
        if: runner.os == 'macOS'
        run: otool -L target/debug/test-opencv
        
      - name: Print Linkage (otool -L)
        if: runner.os == 'Windows'
        run: dumpbin /IMPORTS:target/debug/test-opencv.exe
        
